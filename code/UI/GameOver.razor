@using Sandbox;
@using Sandbox.UI;
@inherits PanelComponent

<root>
	<div class="game-over">
		<div class="over-message">@Messages[ScreenSelected]</div>
		<div class="score">Score: @GetScore()</div>
		<img class="graphic" src="icons/@(Icons[ScreenSelected]).png" />
		<div class="buttons">
			<button class="play-again" onclick=@NewGame>Play Again</button>
			<button class="leaderboards" onclick=@ShowLeaderboard>Leaderboards</button>
		</div>
	</div>
</root>

@code {
	/// <summary>
	///	Leaderboard is referenced to Enable the game object when the player clicks the Leaderboard button
	/// </summary>
	[Property] GameObject Leaderboard { get; set; }


	/// <summary>
	/// Stats are referenced to show the Player's Score in the Game Over screen
	/// </summary>
	[Property] PlayerStats Stats { get; set; }


	/// <summary>
	/// Player's Box Collider is referenced to Disable collision when Player loses
	/// </summary>
	[Property] BoxCollider Hitbox { get; set; }


	/// <summary>
	/// Player's Hud is referenced to disable when game over is activated
	/// </summary>
	[Property] PlayerHud Hud { get; set;  }


	/// <summary>
	/// CopScript is referenced to disable Cops when Game is Over
	/// </summary>
	[Property] CopScript Cops { get; set; }

	List<string> Messages = new() {
		"You died in a crash",
		"You were arrested by the police",
		"You starved to death",
		"You died of thirst",
		"You're tweaking to death",
		"You fell asleep at the wheel"
	};

	List<string> Icons = new() {
		"ded",
		"arrested",
		"hunger",
		"thirst",
		"buzz",
		"boredom"
	};

	int ScreenSelected = 0;

	public void EndGame(string screenID) {
		Sandbox.Services.Stats.SetValue("score_v2", Stats.Score / 10);

		if (Icons.Contains(screenID)) {
			ScreenSelected = Icons.IndexOf(screenID);
		} else {
			ScreenSelected = 0;
		}

		Sound.StopAll(0f);
		if (Stats != null) { Stats.Playing = false; }
		if (Hitbox != null) { Hitbox.Enabled = false; }
		if (Cops != null) { Cops.Flashing = false; }
		if (Hud != null) { Hud.Enabled = false; }
	}

	string GetScore() {
		if (Stats == null) { return "Unknown"; }

		return $"{Stats.Score / 10}";
	}

	void ShowLeaderboard() {
		if (Leaderboard == null) { return; }

		Leaderboard.Enabled = true;
		ViewLeaderboard component = Leaderboard.Components.Get<ViewLeaderboard>();

		if (component != null) { component.UpdateLeaderboard(); }

		GameObject.Enabled = false;
	}

	void NewGame() { Scene.LoadFromFile("scenes/driving.scene"); }

	/// <summary>
	/// the hash determines if the system should be rebuilt. If it changes, it will be rebuilt
	/// </summary>
	protected override int BuildHash() => System.HashCode.Combine( ScreenSelected );
}
